<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.chinalife.ecdata.dao.sqlDao.trade.LifePremiumDao">
    <select id="getLifePremiumOverview" resultType="Premium">
        SELECT
            STAT_DAY statDay,KPI_VALUE_D dayAmount,KPI_VALUE_LD lastDayAmount,KPI_VALUE_M monthAmount,
            KPI_VALUE_LM lastMonthAmount,KPI_VALUE_Y yearAmount,GOAL_VALUE yearGoal
        FROM
	        DMP_APP.APP_KPI_VALUE2018_D
        WHERE
	        FIRST_LEVEL = '002' AND STAT_DAY=to_char(SYSDATE-1,'YYYYmmdd')
    </select>

    <select id="getPremiumDetailWithOnlyAgentAndPolicyNo" resultType="Order" parameterType="QueryPara">
        SELECT
        a.AGENT_ID agentId,nvl(b.plc_no,a.policy_no) policyNo
        FROM TSS_SX.ts_order_base A INNER JOIN TSS_SX.TS_ORDER_DELIVER b ON A .order_id = b.order_id
        AND A.CHECK_PASS_TIME IS NOT NULL
        AND
        <![CDATA[
         b.elimi_TIME >= concat(#{startDate},' 00:00:00')
		]]>
        AND
        <![CDATA[
        b.elimi_TIME >= concat(#{endDate},' 23:59:59')
        ]]>
    </select>

    <select id="getPremiumDetailWithOnlyPolicyNoAndPremium" resultType="Order" parameterType="java.lang.String">
        SELECT
        cntr_no policyNo,SUM ( CASE moneyin_itrvl
        WHEN 'W' THEN
			TO_NUMBER (std_premium)
		WHEN 'Y' THEN
			TO_NUMBER (std_premium)
		WHEN 'H' THEN
			TO_NUMBER (std_premium) * 2
		WHEN 'Q' THEN
			TO_NUMBER (std_premium) * 4
		WHEN 'M' THEN
			TO_NUMBER (std_premium) * 12
		ELSE
			0
		END ) premium
        FROM TSS_SX.ftp_dlfiledata WHERE biz_type = '6'
        AND ${_parameter} GROUP BY cntr_no
    </select>

    <delete id="deleteAllExistedRecord" parameterType="java.lang.String">
        DELETE FROM DMP_SELECT.STAT_RESULT WHERE INDEX_NAME=#{_parameter}
    </delete>

    <select id="getLifePremiumDetail" resultType="Premium" parameterType="QueryPara">
        SELECT
        <if test='timeSpan == "D"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 10)
        </if>
        <if test='timeSpan == "M"'>
            CONCAT(SUBSTR (TOD.ELIMI_TIME, 1, 7),'-01')
        </if>
        <if test='timeSpan == "Y"'>
            CONCAT(SUBSTR (TOD.ELIMI_TIME, 1, 4),'-01-01')
        </if>
        statDay,#{timeSpan} timeSpan,DECODE(SUBSTR (T .AGENT_ID, 1, 1),'H','合肥电销中心','C','成都电销中心','Z','郑州电销中心','未知') branchName,
                SUM ( DECODE (T .PAYMENT_TYPE,'W',T .SUM_PREM / 10,'Y',T .SUM_PREM,'H',T .SUM_PREM * 2,'Q',T .SUM_PREM * 4,'M',T .SUM_PREM * 12,0)) accumulatedAmount
        FROM TSS_SX.TS_ORDER_BASE T INNER JOIN TSS_SX.TS_ORDER_DELIVER TOD ON T .ORDER_ID = TOD.ORDER_ID
        INNER JOIN ( SELECT DISTINCT CNTR_NO FROM TSS_SX.FTP_DLFILEDATA WHERE BIZ_TYPE = '6' AND CNTR_NO NOT IN ( SELECT CNTR_NO FROM TSS_SX.FTP_DLFILEDATA WHERE BIZ_TYPE = '8'
		AND SUB_BIZ_TYPE = '3')) FD ON TOD.PLC_NO = FD.CNTR_NO
		WHERE T .CHECK_PASS_TIME IS NOT NULL GROUP BY DECODE(SUBSTR (T .AGENT_ID, 1, 1),'H','合肥电销中心','C','成都电销中心','Z','郑州电销中心','未知'),
        <if test='timeSpan == "D"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 10)
        </if>
        <if test='timeSpan == "M"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 7)
        </if>
        <if test='timeSpan == "Y"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 4)
        </if>
    </select>

    <select id="getLifePremiumDetailOfInternet" resultType="Premium" parameterType="QueryPara">
        SELECT
        <if test='timeSpan == "D"'>
            TO_CHAR (o.paytime, 'YYYY-MM-DD')
        </if>
        <if test='timeSpan == "M"'>
            CONCAT(TO_CHAR (o.paytime, 'YYYY-MM'),'-01')
        </if>
        <if test='timeSpan == "Y"'>
            CONCAT(TO_CHAR (o.paytime, 'YYYY'),'-01-01')
        </if>
        statDay,#{timeSpan} timeSpan,'网销' branchName,
        SUM (M .sumpremium) accumulatedAmount
        FROM chinalifeec.ge_proposal_main M
        INNER JOIN chinalifeec.ge_member_proposal P ON M .proposalsid = P .proposalsid
        LEFT JOIN chinalifeec.ge_order_proposal op ON M .proposalno = op.proposalno
        LEFT JOIN chinalifeec.ge_order o ON o.orderno = op.orderno
        WHERE
        M .businessarea = '2'
        AND M .status IN ('05', '08', '10', '15')
        AND P .partyflag = '1'
        AND o.paytime IS NOT NULL GROUP BY
        <if test='timeSpan == "D"'>
            TO_CHAR (o.paytime, 'YYYY-MM-DD')
        </if>
        <if test='timeSpan == "M"'>
            TO_CHAR (o.paytime, 'YYYY-MM')
        </if>
        <if test='timeSpan == "Y"'>
            TO_CHAR (o.paytime, 'YYYY')
        </if>
    </select>

    <select id="getLifePremiumDetailWithoutDistinctBranch" resultType="Premium" parameterType="QueryPara">
        SELECT
        <if test='timeSpan == "D"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 10)
        </if>
        <if test='timeSpan == "M"'>
            CONCAT(SUBSTR (TOD.ELIMI_TIME, 1, 7),'-01')
        </if>
        <if test='timeSpan == "Y"'>
            CONCAT(SUBSTR (TOD.ELIMI_TIME, 1, 4),'-01-01')
        </if>
        statDay,#{timeSpan} timeSpan,#{userSource} branchName,
        SUM ( DECODE (T .PAYMENT_TYPE,'W',T .SUM_PREM / 10,'Y',T .SUM_PREM,'H',T .SUM_PREM * 2,'Q',T .SUM_PREM * 4,'M',T .SUM_PREM * 12,0)) accumulatedAmount
        FROM TSS_SX.TS_ORDER_BASE T INNER JOIN TSS_SX.TS_ORDER_DELIVER TOD ON T .ORDER_ID = TOD.ORDER_ID
        INNER JOIN ( SELECT DISTINCT CNTR_NO FROM TSS_SX.FTP_DLFILEDATA WHERE BIZ_TYPE = '6' AND CNTR_NO NOT IN ( SELECT CNTR_NO FROM TSS_SX.FTP_DLFILEDATA WHERE BIZ_TYPE = '8'
        AND SUB_BIZ_TYPE = '3')) FD ON TOD.PLC_NO = FD.CNTR_NO
        WHERE T .CHECK_PASS_TIME IS NOT NULL GROUP BY
        <if test='timeSpan == "D"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 10)
        </if>
        <if test='timeSpan == "M"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 7)
        </if>
        <if test='timeSpan == "Y"'>
            SUBSTR (TOD.ELIMI_TIME, 1, 4)
        </if>
    </select>

    <insert id="updateLifePremium" parameterType="java.util.List">
        INSERT INTO DMP_SELECT.STAT_RESULT
        (STAT_TIME,STAT_TIME_SPAN, INDEX_NAME, INDEX_VALUE, INDEX_SOURCE, CREATE_TIME,UPDATE_TIME)
        SELECT t1.startDate,t1.timeSpan,t1.indexName,t1.accumulatedAmount,t1.branchName,t1.createTime,t1.updateTime
        FROM (
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.statDay,jdbcType=VARCHAR} startDate,
            #{item.timeSpan,jdbcType=VARCHAR} timeSpan,
            #{item.indexName,jdbcType=VARCHAR} indexName,
            #{item.accumulatedAmount,jdbcType=NUMERIC} accumulatedAmount,
            #{item.branchName,jdbcType=VARCHAR} branchName,
            sysdate createTime,
            sysdate updateTime
            FROM dual
        </foreach>
        ) t1
    </insert>

    <select id="getLifePremiumOfUpper" resultType="Premium">
        SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
        FROM DMP_SELECT.STAT_RESULT
        WHERE INDEX_NAME='lifePremium' AND STAT_TIME=TO_CHAR(SYSDATE-1,'YYYY-MM-DD') AND STAT_TIME_SPAN='D'
        UNION ALL
        SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
        FROM DMP_SELECT.STAT_RESULT
        WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(TO_CHAR(SYSDATE-1,'YYYY-MM'),'-01') AND STAT_TIME_SPAN='M'
        UNION ALL
        SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
        FROM DMP_SELECT.STAT_RESULT
        WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(TO_CHAR(SYSDATE-1,'YYYY'),'-01-01') AND STAT_TIME_SPAN='Y'
        UNION ALL
        SELECT statDay,timeSpan,SUM (T.accumulatedAmount) accumulatedAmount,'总计'
        FROM (
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=TO_CHAR(SYSDATE-1,'YYYY-MM-DD') AND STAT_TIME_SPAN='D'
            UNION ALL
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(TO_CHAR(SYSDATE-1,'YYYY-MM'),'-01') AND STAT_TIME_SPAN='M'
            UNION ALL
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(TO_CHAR(SYSDATE-1,'YYYY'),'-01-01') AND STAT_TIME_SPAN='Y'
        ) T GROUP BY statDay,timeSpan
    </select>

    <select id="getLifePremiumOfLower" resultType="Premium">
        SELECT
            STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=TO_CHAR(SYSDATE-2,'YYYY-MM-DD') AND STAT_TIME_SPAN='D'
            UNION ALL
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(to_char(add_months(trunc(sysdate-1),-1),'yyyy-mm'),'-01') AND STAT_TIME_SPAN='M'
        UNION ALL
        SELECT statDay,timeSpan,SUM (T.accumulatedAmount) accumulatedAmount,'总计'
        FROM (
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=TO_CHAR(SYSDATE-2,'YYYY-MM-DD') AND STAT_TIME_SPAN='D'
            UNION ALL
            SELECT STAT_TIME statDay,STAT_TIME_SPAN timeSpan,INDEX_VALUE accumulatedAmount,INDEX_SOURCE branchName
            FROM DMP_SELECT.STAT_RESULT
            WHERE INDEX_NAME='lifePremium' AND STAT_TIME=CONCAT(to_char(add_months(trunc(sysdate-1),-1),'yyyy-mm'),'-01') AND STAT_TIME_SPAN='M'
        ) T GROUP BY statDay,timeSpan
    </select>

    <select id="getLifePremiumDetailFromStatResult" resultType="Premium" parameterType="QueryPara">
        SELECT
        INDEX_SOURCE branchName, sum(INDEX_VALUE) accumulatedAmount
        FROM DMP_SELECT.STAT_RESULT
        WHERE INDEX_NAME='lifePremium' AND STAT_TIME_SPAN='D'
        AND
        <![CDATA[
         STAT_TIME >= #{startDate}
		]]>
        AND
        <![CDATA[
        STAT_TIME <= #{endDate}
        ]]>
        GROUP BY INDEX_SOURCE ORDER BY sum(INDEX_VALUE) DESC
    </select>

</mapper>
